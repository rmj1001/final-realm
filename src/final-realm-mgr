#!/usr/bin/env bash

###################################################
# [ Important Functions ] #
###################################################
function PRINT() {
    printf "%b\n" "$@"
}

function PAUSE() {
    read -r -p "PRESS <ENTER> TO CONTINUE..."
}

function LOWERCASE() {
    printf "%b" "${1}" | tr "[:upper:]" "[:lower:]"
}

###################################################
# [ Handling SIGINT ] #
###################################################
function ctrl_c() {
    clear
    exit 0
}

trap ctrl_c INT

###################################################
# [ Script Config ] #
###################################################
project_folder="${HOME}/.local/share/final-realm"
repository="${project_folder}/repository"
bin="${HOME}/.local/bin"
game="${bin}/final-realm"
mgr="${bin}/final-realm-mgr"
EXIT=1

###################################################
# [ Clone/Update local repository ] #
###################################################
function clone_or_update_repo() {
    REPO_EXISTS=false
    [[ -d "${repository}" ]] && REPO_EXISTS=true

    [[ $REPO_EXISTS == true ]] && {
        cd "${repository}" && git pull && return 0
    }

    mkdir -p "${repository}"
    git clone git@github.com:rmj1001/final-realm.git "${repository}"
}

###################################################
# [ Install files ] #
###################################################
function install_files() {
    install -v -m 700 -o "${USER}" -D -t "${bin}" "${repository}/src/final-realm"
    install -v -m 700 -o "${USER}" -D -t "${bin}" "${repository}/src/final-realm-mgr"
}

###################################################
# [ Uninstall Final Realm ] #
###################################################
function uninstall_files() {
    [[ -d "${project_folder}" ]] && rm -rf "${project_folder}"
    rm -f "${game}"
    rm -f "${mgr}"
}

###################################################
# [ Manager Menu ] #
###################################################
function interactiveMenu() {
    while [[ $EXIT -ne 0 ]]; do
        clear
        PRINT "#######################################################################################"
        PRINT "# ███████ ██ ███    ██  █████  ██          ██████  ███████  █████  ██      ███    ███ #"
        PRINT "# ██      ██ ████   ██ ██   ██ ██          ██   ██ ██      ██   ██ ██      ████  ████ #"
        PRINT "# █████   ██ ██ ██  ██ ███████ ██          ██████  █████   ███████ ██      ██ ████ ██ #"
        PRINT "# ██      ██ ██  ██ ██ ██   ██ ██          ██   ██ ██      ██   ██ ██      ██  ██  ██ #"
        PRINT "# ██      ██ ██   ████ ██   ██ ███████     ██   ██ ███████ ██   ██ ███████ ██      ██ #"
        PRINT "#######################################################################################"
        PRINT
        PRINT
        PRINT "Please choose an option."
        PRINT "1. Install or Upate"
        PRINT "2. Uninstall"
        PRINT
        PRINT "0. Exit"
        PRINT
        read -r -p "ID > " option

        case "$(LOWERCASE "${option}")" in
        0 | 'exit')
            clear
            exit 0
            ;;
        1 | 'install or update' | 'install' | 'update')
            clone_or_update_repo
            install_files
            PAUSE
            continue
            ;;
        2 | 'uninstall')
            uninstall_files
            PAUSE
            continue
            ;;
        *)
            [[ -n "${option}" ]] && {
                PRINT "Invalid option '${option}'."
                PAUSE
                continue
            }

            PRINT "You must choose an option."
            PAUSE
            continue
            ;;
        esac

    done
}

###################################################
# [ Command line interface ] #
###################################################
[[ $# -le 0 ]] && {
    interactiveMenu
    exit 0
}

while [[ $# -gt 0 ]]; do
    case "$1" in
    --install | --update)
        clone_or_update_repo
        install_files
        shift
        continue
        ;;
    --uninstall)
        uninstall_files
        shift
        continue
        ;;
    --interactive)
        interactiveMenu
        exit 0
        ;;
    \? | -h | --help)
        echo "#######################################################################################"
        echo "# ███████ ██ ███    ██  █████  ██          ██████  ███████  █████  ██      ███    ███ #"
        echo "# ██      ██ ████   ██ ██   ██ ██          ██   ██ ██      ██   ██ ██      ████  ████ #"
        echo "# █████   ██ ██ ██  ██ ███████ ██          ██████  █████   ███████ ██      ██ ████ ██ #"
        echo "# ██      ██ ██  ██ ██ ██   ██ ██          ██   ██ ██      ██   ██ ██      ██  ██  ██ #"
        echo "# ██      ██ ██   ████ ██   ██ ███████     ██   ██ ███████ ██   ██ ███████ ██      ██ #"
        echo "#######################################################################################"
        echo
        echo "${0##*/} - Manage the installation for the Final Realm game."
        echo
        echo "Flags:"
        echo -e "--install\t\tInstall the Final Realm game."
        echo -e "--update\t\tUpdate the Final Realm game."
        echo -e "--uninstall\t\tUninstall the Final Realm game"
        echo
        echo -e "--interactive\t\tShow the interactive menu instead."
        echo
        echo "Tip: Just run '${0##*/}' in the terminal to use an interactive menu."
        echo
        exit 0
        ;;
    *)
        echo "${0##*/}: Invalid command '${1}'."
        shift
        continue
        ;;
    esac

done
